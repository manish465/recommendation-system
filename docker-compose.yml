version: "3.8"
name: "RecommendationMS"

services:
  recommender-service:
    build:
      context: ./services/recommender-service
      dockerfile: Dockerfile
    container_name: recommender-service
    ports:
      - "8000:8000"
    networks:
      - app-network
    volumes:
      - ./services/recommender-service/app/data:/app/app/data
    depends_on:
      - redis
      - kafka

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: user-service
    depends_on:
      - recommender-service
      - redis
      - kafka
    ports:
      - "8080:8080"
    environment:
      - RECOMMENDER_API_URL=http://recommender-service:8000
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      # Required for KRaft mode
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      # Listeners & advertised listeners
      KAFKA_LISTENERS: "CONTROLLER://:9093,PLAINTEXT://:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"

      # Topic replication factors etc.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"

    networks:
      - app-network

networks:
  app-network:
    driver: bridge
