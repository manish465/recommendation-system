version: "3.8"
name: "RecommendationMS"

services:
  recommender-service:
    build:
      context: ./services/recommender-service
      dockerfile: Dockerfile
    container_name: recommender-service
    ports:
      - "8000:8000"
    networks:
      - app-network
    volumes:
      - ./services/recommender-service/app/data:/app/app/data
    depends_on:
      kafka:
        condition: service_started

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: user-service
    depends_on:
      recommender-service:
        condition: service_started
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - RECOMMENDER_API_URL=http://recommender-service:8000
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
